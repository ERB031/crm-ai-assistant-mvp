// prisma/schema.prisma

// ---------- Generator ----------
generator client {
  provider = "prisma-client-js"
}

// ---------- Datasource ----------
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")  // pooled (PgBouncer) URL
  directUrl = env("DIRECT_URL")    // direct 5432 URL for migrations
}

// ---------- Enums ----------
enum DealStage {
  lead
  qualified
  proposal
  negotiation
  won
  lost
}

enum TaskStatus {
  todo
  in_progress
  blocked
  done
  archived
}

enum InteractionType {
  email
  call
  note
  meeting
}

enum AiDraftKind {
  email
  note
  summary
}

enum TargetType {
  contact
  deal
  project
  task
}

enum RunStatus {
  success
  failed
  skipped
}

// ---------- Models ----------
model Tenant {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  clients   Client[]
  projects  Project[]
  tasks     Task[]
  notes     Note[]
  webhooks  WebhookOutbox[]

  @@unique([name])
}

model Client {
  id        String    @id @default(uuid())
  tenantId  String
  name      String
  email     String?
  phone     String?
  address   String?      // added
  birthday  DateTime?    // added
  stage     DealStage    @default(lead)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relations
  tenant    Tenant    @relation(fields: [tenantId], references: [id], onDelete: Restrict)
  projects  Project[]
  notes     Note[]

  @@index([tenantId])
  @@index([stage])
  @@unique([tenantId, name])
}

model Project {
  id        String    @i
